{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","connection/Connection.js","components/Autocomplete/Autocomplete.js","components/TabPanel/TabPanelContainer.js","resources/Color.js","views/LandingPage/NewsDiversitySection.js","components/Wordcloud/Wordcloud.js","views/LandingPage/WordcloudSection.js","components/TagView/TagView.js","components/ArticlesDialog/ArticlesDialog.js","index.js","views/LandingPage/LandingPage.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","getKeyword","url","period","axiosConfig","params","limit","axios","get","BASE_API_URL","then","response","catch","error","console","log","JSON","stringify","getDiversity","filter","createFilterOptions","SourceAutocomplete","props","React","useState","value","setValue","open","setOpen","options","setOptions","loading","length","useEffect","active","headers","result","data","Container","maxWidth","style","display","justifyContent","Autocomplete","onOpen","onClose","getOptionSelected","option","name","getOptionLabel","renderInput","TextField","label","variant","InputProps","endAdornment","Fragment","CircularProgress","color","size","onChange","event","newValue","inputValue","filterOptions","filtered","push","width","freeSolo","Button","marginLeft","onClick","text","onChangeValue","TabPanelContainer","children","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","COLOR","BLUE","ORANGE","GREEN","RED","LILAC","BROWN","useStyles","makeStyles","theme","footer","textAlign","marginTop","fontSize","cell","cursor","NewsDiversitySection","forwardRef","ref","page","setPage","diversityDaily","setDiversityDaily","diversityWeekly","setDiversityWeekly","diversityMonthly","setDiversityMonthly","source","setSource","activeCell","setActiveCell","classes","useImperativeHandle","sourceUpdated","sendRequests","domain","setResult","setter","diversity","business","politics","health","entertainment","scienceTechnology","sport","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","dx","dy","alignmentBaseline","toFixed","onHover","onHoverOut","renderActiveShape","_props","startAngle","endAngle","payload","e","handleOpenArticlesByCategoryDialog","AppBar","position","Tabs","Tab","icon","onChangeIndex","Skeleton","animation","height","isAnimationActive","labelLine","dataKey","activeIndex","activeShape","onMouseEnter","onMouseLeave","map","entry","key","wrapperStyle","bottom","Wordcloud","words","callbacks","callback","colors","fontFamily","fontSizes","fontStyle","fontWeight","rotations","rotationAngles","enableOptimizations","WordcloudSection","wordcloudPage","setWordcloudPage","wordsDaily","setWordsDaily","wordsWeekly","setWordsWeekly","wordsMonthly","setWordsMonthly","onWordClickCallback","getWordTooltip","word","onWordClick","handleOpenArticlesDialog","indicatorColor","textColor","aria-label","container","item","paddingRight","paddingLeft","paddingTop","paddingBottom","marginRight","borderRadius","itemInHeader","businessBg","background","politicsBg","healthBg","entertainmentBg","scienceTechBg","sportBg","TagView","header","bgColor","isHeader","items","join","card","margin","spacing","media","minWidth","title","marginBottom","textDecoration","description","date","ArticlesDialog","articles","setArticles","setLoading","Media","mercuryItem","setMercuryItem","mercuryLoading","setMercuryLoading","article","link","Mercury","parse","Card","CardMedia","image","lead_image_url","CardContent","categories","CardActionArea","excerpt","fullDate","split","Date","twoDigitMonth","parseInt","getMonth","twoDigitDate","getDate","getFullYear","parseDate","pubDate","getData","q","getArticlesByKeyword","category","getArticlesByCategory","Dialog","isArticlesDialogOpened","handleCloseArticlesDialog","scroll","onEntered","onExited","aria-describedby","DialogTitle","DialogContent","dividers","DialogActions","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","ReactDOM","render","path","setArticlesDialogOpened","setWord","setCategory","newsDiversityChild","useRef","wordCloudChild","val","current","Grid","xs","sm","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b18a2dca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './index.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\n// const BASE_API_URL = 'http://192.168.1.103:7777/api/';\nconst BASE_API_URL = 'http://ariadne.is.inf.uni-due.de:7777/api/';\n\nconst SOURCE = BASE_API_URL + \"source\";\nconst KEYWORD = BASE_API_URL + \"keyword\";\nconst DIVERSITY = BASE_API_URL + \"diversity\";\nconst ARTICLES_BY_KEYWORD = BASE_API_URL + \"articles/keyword\";\nconst ARTICLES_BY_CATEGORY = BASE_API_URL + \"articles/category\";\n\n\nexport {\n    getSources,\n    getKeyword,\n    getDiversity,\n    getArticlesByKeyword,\n    getArticlesByCategory\n};\n\nfunction getSources() {\n    let axiosConfig = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    return axios.get(SOURCE, axiosConfig)\n        .then(response => {\n            // console.log(\"SOURCE: connection ==> \" + JSON.stringify(response));\n            return response\n        })\n        .catch(error => {\n            console.log(JSON.stringify(error));\n            return error\n        });\n}\n\n\nfunction getKeyword(url, period) {\n    let axiosConfig = {\n        params: {\n            url: url,\n            period: period,\n            limit: 50\n        }\n    };\n    return axios.get(KEYWORD, axiosConfig)\n        .then(response => {\n            // console.log(\"KEYWORD: connection ==> \" + JSON.stringify(response));\n            return response\n        })\n        .catch(error => {\n            console.log(JSON.stringify(error));\n            return error\n        });\n}\n\n\nfunction getDiversity(url, period) {\n    let axiosConfig = {\n        params: {\n            url: url,\n            period: period,\n        }\n    };\n    return axios.get(DIVERSITY, axiosConfig)\n        .then(response => {\n            // console.log(\"DIVERSITY: connection ==> \" + JSON.stringify(response));\n            return response\n        })\n        .catch(error => {\n            console.log(JSON.stringify(error));\n            return error\n        });\n}\n\n\nfunction getArticlesByKeyword(q, url, page) {\n    let axiosConfig = {\n        params: {\n            q: q,\n            url: url,\n            page: page\n        }\n    };\n    return axios.get(ARTICLES_BY_KEYWORD, axiosConfig)\n        .then(response => {\n            console.log(\"ARTICLES_BY_KEYWORD: connection ==> \");\n            // console.log(\"ARTICLES_BY_KEYWORD: connection ==> \" + JSON.stringify(response));\n            return response\n        })\n        .catch(error => {\n            console.log(\"ARTICLES_BY_KEYWORD : \" + JSON.stringify(error));\n            return error\n        });\n}\n\n\nfunction getArticlesByCategory(q, url, page) {\n    let axiosConfig = {\n        params: {\n            q: q,\n            url: url,\n            page: page\n        }\n    };\n    return axios.get(ARTICLES_BY_CATEGORY, axiosConfig)\n        .then(response => {\n            console.log(\"ARTICLES_BY_CATEGORY: connection ==> \");\n            return response\n        })\n        .catch(error => {\n            console.log(\"ARTICLES_BY_KEYWORD : \" + JSON.stringify(error));\n            return error\n        });\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getSources} from \"../../connection/Connection\";\nimport Container from \"@material-ui/core/Container\";\n\nconst filter = createFilterOptions();\n\nexport default function SourceAutocomplete(props) {\n    const [value, setValue] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading = open && options.length === 0;\n\n    const analyzeBtn = {\n        marginLeft: 20\n    };\n\n    const search = {\n        display: \"flex\",\n        justifyContent: \"center\"\n    };\n\n    React.useEffect(() => {\n        let active = true;\n\n        if (!loading) {\n            return undefined;\n        }\n\n        getSources().then(result => {\n            if (active) {\n                console.log(result.data);\n                setOptions(result.data)\n            }\n        });\n        return () => {\n            active = false;\n        };\n    }, [loading]);\n\n    React.useEffect(() => {\n        if (!open) {\n            setOptions([]);\n        }\n    }, [open]);\n\n\n    function f(text) {\n        // console.log(\"click: \" + text.title);\n        props.onChangeValue(text);\n    }\n\n    return (\n        <Container maxWidth=\"sm\" style={search}>\n\n            <Autocomplete\n                value={value}\n                open={open}\n                onOpen={() => {\n                    setOpen(true);\n                }}\n                onClose={() => {\n                    setOpen(false);\n                }}\n                getOptionSelected={(option, value) => option.name === value.name}\n                getOptionLabel={option => option.name}\n                options={options}\n                loading={loading}\n                renderInput={params => (\n                    <TextField\n                        {...params}\n                        label=\"Select news source\"\n                        variant=\"outlined\"\n                        InputProps={{\n                            ...params.InputProps,\n                            endAdornment: (\n                                <React.Fragment>\n                                    {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                                    {params.InputProps.endAdornment}\n                                </React.Fragment>\n                            ),\n                        }}\n                    />\n                )}\n                onChange={(event, newValue) => {\n                    if (newValue && newValue.inputValue) {\n                        setValue({\n                            name: newValue.inputValue,\n                        });\n\n                        return;\n                    }\n                    setValue(newValue);\n                }}\n                filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n\n                    if (params.inputValue !== '') {\n                        filtered.push({\n                            inputValue: params.inputValue,\n                            name: `Add \"${params.inputValue}\"`,\n                        });\n                    }\n\n                    return filtered;\n                }}\n                // id=\"free-solo-with-text-demo\"\n                // options={top100Films}\n                // getOptionLabel={option => {\n                //     // e.g value selected with enter, right from the input\n                //     if (typeof option === 'string') {\n                //         return option;\n                //     }\n                //     if (option.inputValue) {\n                //         return option.inputValue;\n                //     }\n                //     return option.name;\n                // }}\n                // renderOption={option => option.name}\n                style={{width: 300}}\n                freeSolo\n                // renderInput={params => (\n                //     <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" />\n                // )}\n            />\n\n            <Button variant=\"contained\" style={analyzeBtn} onClick={() => f(value)}>Analyze</Button>\n\n        </Container>\n\n    );\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function TabPanelContainer(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-force-tabpanel-${index}`}\n            aria-labelledby={`scrollable-force-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}","const COLOR = {\n    BLUE: '#1f77b4',\n    ORANGE: '#ff7f0e',\n    GREEN: '#2ca02c',\n    RED: '#d62728',\n    LILAC: '#9467bd',\n    BROWN: '#8c564b'\n};\nexport default COLOR;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport TabPanelContainer from \"../../components/TabPanel/TabPanelContainer\";\n\nimport {Cell, Legend, Pie, PieChart, Sector, Tooltip} from 'recharts';\nimport {getDiversity} from \"../../connection/Connection\";\nimport COLOR from \"../../resources/Color\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        textAlign: \"center\",\n        marginTop: 25,\n        fontSize: 12\n    },\n    cell: {\n        \"&:hover\": {\n            cursor: \"pointer\"\n        }\n    },\n}));\n\nexport const NewsDiversitySection = React.forwardRef((props, ref) => {\n    const [page, setPage] = React.useState(0);\n    const [diversityDaily, setDiversityDaily] = React.useState([]);\n    const [diversityWeekly, setDiversityWeekly] = React.useState([]);\n    const [diversityMonthly, setDiversityMonthly] = React.useState([]);\n    const [source, setSource] = React.useState();\n    const [activeCell, setActiveCell] = React.useState(null);\n\n    const classes = useStyles();\n\n    // called form reference in LandingPage.js\n    React.useImperativeHandle(ref, () => ({\n        sourceUpdated(source) {\n            console.log(\"Source: \" + JSON.stringify(source))\n            setSource(source)\n            if (source != null)\n                sendRequests(source.domain)\n            else\n                sendRequests(\"\")\n        }\n    }));\n\n    const handleChange = (event, newValue) => {\n        setPage(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setPage(index);\n    };\n\n    React.useEffect(() => {\n        sendRequests(\"\");\n    }, []);\n\n    function sendRequests(url) {\n        console.log(\"sendRequests for url: \" + url)\n        setDiversityDaily([])\n        setDiversityWeekly([])\n        setDiversityMonthly([])\n        getDiversity(url, \"daily\").then(result => {\n            setResult(result, setDiversityDaily);\n        });\n        getDiversity(url, \"weekly\").then(result => {\n            setResult(result, setDiversityWeekly);\n        });\n        getDiversity(url, \"monthly\").then(result => {\n            setResult(result, setDiversityMonthly);\n        });\n\n    }\n\n    function setResult(result, setter) {\n        // TODO match categories with server\n        setter([{\n            name: 'Business', diversity: result.data.business, color: COLOR.ORANGE,\n        },\n            {\n                name: 'Politics', diversity: result.data.politics, color: COLOR.RED,\n            },\n            {\n                name: 'Health', diversity: result.data.health, color: COLOR.GREEN,\n            },\n            {\n                name: 'Entertainment', diversity: result.data.entertainment, color: COLOR.LILAC,\n            },\n            {\n                name: 'Science & Technology', diversity: result.data.scienceTechnology, color: COLOR.BLUE,\n            },\n            {\n                name: 'Sport', diversity: result.data.sport, color: COLOR.BROWN,\n            }])\n\n    }\n\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n                                       cx, cy, midAngle, innerRadius, outerRadius, percent, index, name\n                                   }) => {\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        return (\n            <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                <tspan dx=\"1.0em\" dy=\"0.2em\" alignmentBaseline=\"middle\"\n                       fontSize=\"16\">{`${(percent * 100).toFixed(0)}%`}</tspan>\n            </text>\n\n        );\n    };\n\n\n    const onHover = (data, index) => {\n        setActiveCell(index)\n    };\n    const onHoverOut = (data, index) => {\n        setActiveCell(null)\n    };\n    const renderActiveShape = (_props) => {\n        const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n            fill, payload, percent, value } = _props;\n\n        return (\n            <g>\n                <Sector\n                    className={classes.cell}\n                    cx={cx}\n                    cy={cy}\n                    innerRadius={innerRadius}\n                    outerRadius={outerRadius+15}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    onClick={(e) => {\n                        props.handleOpenArticlesByCategoryDialog(payload.payload)\n                    }}\n                    fill={fill}\n                />\n            </g>\n        );\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={page}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                >\n                    <Tab icon={<TodayIcon/>} label=\"Daily\"/>\n                    <Tab icon={<DateRangeIcon/>} label=\"Weekly\"/>\n                    <Tab icon={<EventIcon/>} label=\"Monthly\"/>\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                index={page}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanelContainer value={page} index={0}>\n                    {diversityDaily.length === 0 ? (\n                        <React.Fragment>\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\"/>\n                        </React.Fragment>\n                    ) : (\n\n                        <PieChart width={400} height={400}>\n                            <Pie\n                                data={diversityDaily}\n                                cx={200}\n                                cy={200}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                                // label={item => renderCustomLabel(item)}\n                                outerRadius={150}\n                                fill=\"#8884d8\"\n                                dataKey=\"diversity\"\n                                activeIndex={activeCell}\n                                activeShape={renderActiveShape}\n                                onMouseEnter={onHover}\n                                onMouseLeave={onHoverOut}\n                            >\n                                {\n                                    diversityDaily.map((entry, index) =>\n                                        <Cell key={`cell-${index}`} fill={entry.color} />\n                                    )\n                                }\n                            </Pie>\n                            <Tooltip cursor={false}/>\n                            <Legend wrapperStyle={{\n                                bottom: \"-15px\"\n                            }}/>\n                        </PieChart>\n                    )}\n                </TabPanelContainer>\n                <TabPanelContainer value={page} index={1}>\n                    {diversityWeekly.length === 0 ? (\n                        <React.Fragment>\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\"/>\n                        </React.Fragment>\n                    ) : (\n\n                        <PieChart width={400} height={400}>\n                            <Pie\n                                data={diversityWeekly}\n                                cx={200}\n                                cy={200}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                                // label={item => renderCustomLabel(item)}\n                                outerRadius={150}\n                                fill=\"#8884d8\"\n                                dataKey=\"diversity\"\n                                activeIndex={activeCell}\n                                activeShape={renderActiveShape}\n                                onMouseEnter={onHover}\n                                onMouseLeave={onHoverOut}\n                            >\n                                {\n                                    diversityWeekly.map((entry, index) =>\n                                        <Cell key={`cell-${index}`} fill={entry.color}/>\n                                    )\n                                }\n                            </Pie>\n                            <Tooltip/>\n                            <Legend wrapperStyle={{\n                                bottom: \"-15px\"\n                            }}/>\n                        </PieChart>\n                    )}\n                </TabPanelContainer>\n                <TabPanelContainer value={page} index={2}>\n                    {diversityMonthly.length === 0 ? (\n                        <React.Fragment>\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\"/>\n                        </React.Fragment>\n                    ) : (\n\n                        <PieChart width={400} height={400}>\n                            <Pie\n                                data={diversityMonthly}\n                                cx={200}\n                                cy={200}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                                // label={item => renderCustomLabel(item)}\n                                outerRadius={150}\n                                fill=\"#8884d8\"\n                                dataKey=\"diversity\"\n                                activeIndex={activeCell}\n                                activeShape={renderActiveShape}\n                                onMouseEnter={onHover}\n                                onMouseLeave={onHoverOut}\n                            >\n                                {\n                                    diversityMonthly.map((entry, index) =>\n                                        <Cell key={`cell-${index}`} fill={entry.color}/>\n                                    )\n                                }\n                            </Pie>\n                            <Tooltip/>\n                            <Legend wrapperStyle={{\n                                bottom: \"-15px\"\n                            }}/>\n                        </PieChart>\n                    )}\n                </TabPanelContainer>\n            </SwipeableViews>\n            {source != null ? (\n                <div className={classes.footer}>\n                    This data represent the diversity of: {source.name}\n                </div>\n            ) : (\n                <div className={classes.footer}>\n                    This data represent the diversity GLOBALLY\n                </div>)\n            }\n        </div>\n    );\n})","import React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport COLOR from \"../../resources/Color\";\n\nexport default function Wordcloud(props) {\n\n    return (\n        <div style={{height: 400, maxWidth: 500}}>\n            <ReactWordcloud words={props.words}\n                            callbacks={props.callback}\n                            options={{\n                                colors: [\n                                    COLOR.BLUE,\n                                    COLOR.ORANGE,\n                                    COLOR.GREEN,\n                                    COLOR.RED,\n                                    COLOR.LILAC,\n                                    COLOR.BROWN,\n                                ],\n                                // enableTooltip: true,\n                                // deterministic: true,\n                                fontFamily: 'impact',\n                                fontSizes: [15, 60],\n                                fontStyle: 'normal',\n                                fontWeight: 'normal',\n                                // padding: 1,\n                                rotations: 1,\n                                rotationAngles: [0, 90],\n                                enableOptimizations: true,\n                                // scale: 'sqrt',\n                                // spiral: 'archimedean',\n                                // transitionDuration: 1000,\n                            }}/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Wordcloud from \"../../components/Wordcloud/Wordcloud\";\nimport TabPanelContainer from \"../../components/TabPanel/TabPanelContainer\";\nimport {getDiversity, getKeyword} from \"../../connection/Connection\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        textAlign: \"center\",\n        marginTop: 25,\n        fontSize: 12\n    }\n}));\n\nexport const WordcloudSection = React.forwardRef((props, ref) => {\n    const [wordcloudPage, setWordcloudPage] = React.useState(0);\n    const [wordsDaily, setWordsDaily] = React.useState([]);\n    const [wordsWeekly, setWordsWeekly] = React.useState([]);\n    const [wordsMonthly, setWordsMonthly] = React.useState([]);\n    const [source, setSource] = React.useState();\n\n    const classes = useStyles();\n    // called form reference in LandingPage.js\n    React.useImperativeHandle(ref, () => ({\n        sourceUpdated(source) {\n            console.log(\"Source: \" + JSON.stringify(source))\n            setSource(source)\n            if (source != null)\n                sendRequests(source.domain)\n            else\n                sendRequests(\"\")\n        }\n    }));\n\n    const handleWordcloudChange = (event, newValue) => {\n        setWordcloudPage(newValue);\n    };\n\n    const handleWordcloudChangeIndex = (index) => {\n        setWordcloudPage(index);\n    };\n\n    React.useEffect(() => {\n        sendRequests(\"\");\n    }, []);\n\n    function sendRequests(url) {\n        console.log(\"sendRequests for url: \" + url)\n        setWordsDaily([])\n        setWordsWeekly([])\n        setWordsMonthly([])\n        getKeyword(url, \"daily\").then(result => {\n            setWordsDaily(result.data);\n        });\n        getKeyword(url, \"weekly\").then(result => {\n            setWordsWeekly(result.data);\n        });\n        getKeyword(url, \"monthly\").then(result => {\n            setWordsMonthly(result.data);\n        });\n\n    }\n\n    const onWordClickCallback = {\n        getWordTooltip: word => `The word \"${word.text}\" appears ${word.value} times.`,\n        onWordClick: word => props.handleOpenArticlesDialog(word.text)\n    };\n\n\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={wordcloudPage}\n                    onChange={handleWordcloudChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    aria-label=\"icon label tabs example\"\n                >\n                    <Tab icon={<TodayIcon/>} label=\"Daily\"/>\n                    <Tab icon={<DateRangeIcon/>} label=\"Weekly\"/>\n                    <Tab icon={<EventIcon/>} label=\"Monthly\"/>\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                index={wordcloudPage}\n                onChangeIndex={handleWordcloudChangeIndex}\n            >\n                <TabPanelContainer value={wordcloudPage} index={0}>\n                    <Wordcloud words={wordsDaily} callback={onWordClickCallback}/>\n                </TabPanelContainer>\n                <TabPanelContainer value={wordcloudPage} index={1}>\n                    <Wordcloud words={wordsWeekly} callback={onWordClickCallback}/>\n                </TabPanelContainer>\n                <TabPanelContainer value={wordcloudPage} index={2}>\n                    <Wordcloud words={wordsMonthly} callback={onWordClickCallback}/>\n                </TabPanelContainer>\n            </SwipeableViews>\n\n            {source != null ? (\n                <div className={classes.footer}>\n                    This data represent the keywords of: {source.name}\n                </div>\n            ) : (\n                <div className={classes.footer}>\n                    This data represent the keywords GLOBALLY\n                </div>)\n            }\n        </div>\n    );\n})","import React from 'react';\nimport COLOR from \"../../resources/Color\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        display: \"inline-block\",\n\n    },\n    item: {\n        display: \"inline-block\",\n        paddingRight: 10,\n        paddingLeft: 10,\n        paddingTop: 5,\n        paddingBottom: 5,\n        marginRight: 4,\n        borderRadius: 30,\n        color: \"#fff\",\n        fontSize: 12,\n        fontWeight: \"bold\",\n    },\n    itemInHeader: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: 20\n    },\n    // TODO match categories with server\n    businessBg: {\n        background: COLOR.ORANGE,\n    },\n    politicsBg: {\n        background: COLOR.RED,\n    },\n    healthBg: {\n        background: COLOR.GREEN,\n    },\n    entertainmentBg: {\n        background: COLOR.LILAC,\n    },\n    scienceTechBg: {\n        background: COLOR.BLUE,\n    },\n    sportBg: {\n        background: COLOR.BROWN,\n    }\n}));\n\nexport default function TagView(props) {\n    const classes = useStyles();\n    const { header = false } = props;\n\n    const bgColor = (item) => {\n        switch (item) {\n            case 'Business':\n                return classes.businessBg\n            case 'Politics':\n                return classes.politicsBg\n            case 'Health':\n                return classes.healthBg\n            case 'Entertainment':\n                return classes.entertainmentBg\n            case 'Science & Technology':\n                return classes.scienceTechBg\n            case 'Sport':\n                return classes.sportBg\n            default:\n                return classes.businessBg\n        }\n    };\n\n    const isHeader = (item) => {\n\n        if (header)\n            return classes.itemInHeader\n    };\n\n    const items = props.items.map((item, index) =>\n        <div key={index} className={[classes.item, bgColor(item), isHeader()].join(' ')}>\n            {item}\n        </div>\n    );\n\n    return (\n        <div className={classes.container}>\n            {items}\n        </div>\n    );\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport TagView from \"../TagView/TagView\";\nimport Mercury from \"@postlight/mercury-parser\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {getArticlesByCategory, getArticlesByKeyword} from \"../../connection/Connection\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        // maxWidth: 1000,\n        margin: theme.spacing(2),\n    },\n    media: {\n        height: 250,\n        minWidth: 500,\n    },\n    title: {\n        fontWeight: \"bolder\",\n        fontSize: 20,\n        marginTop: 5,\n        marginBottom: 10,\n        color: \"black\",\n        textDecoration: 'none',\n        \"&:hover\": {\n            textDecoration: \"underline\"\n        }\n    },\n    description: {\n        fontSize: 16,\n        marginTop: 10,\n    },\n    source: {\n        fontSize: 12,\n    },\n    date: {\n        fontSize: 12,\n        marginTop: 15,\n        textAlign: 'right'\n    }\n}));\n\nexport const ArticlesDialog = React.forwardRef((props, ref) => {\n\n    const [articles, setArticles] = React.useState([]);\n    const [loading, setLoading] = React.useState(true);\n\n    function Media(props) {\n        // const { loading = false } = props;\n        const classes = useStyles();\n\n        const [mercuryItem, setMercuryItem] = React.useState([]);\n        const [mercuryLoading, setMercuryLoading] = React.useState(true);\n\n        const article = props.item;\n\n        React.useEffect(() => {\n            if (!loading) {\n                var url = \"https://cors-anywhere.herokuapp.com/\" + article.link;\n                Mercury.parse(url).then(result => {\n                    setMercuryItem(result)\n                    setMercuryLoading(false)\n                });\n            }\n        }, []);\n\n        const parseDate = (fullDate) => {\n            var date = fullDate.split('T')[0]\n            fullDate = new Date(date)\n            var twoDigitMonth = (parseInt(fullDate.getMonth() + 1)) + \"\";\n            if (twoDigitMonth.length === 1)\n                twoDigitMonth = \"0\" + twoDigitMonth;\n            var twoDigitDate = fullDate.getDate() + \"\";\n            if (twoDigitDate.length === 1)\n                twoDigitDate = \"0\" + twoDigitDate;\n            return twoDigitDate + \"/\" + twoDigitMonth + \"/\" + fullDate.getFullYear();\n        };\n\n        return (\n            <Card className={classes.card}>\n\n                {mercuryLoading || loading ? (\n                    <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media}/>\n                ) : (\n                    <a href={article.link} target=\"_blank\">\n                        <CardMedia\n                            className={classes.media}\n                            image={mercuryItem.lead_image_url}\n                            title=\"Ted talk\"\n                        />\n                    </a>\n                )}\n\n                <CardContent>\n\n                    <div>\n\n                        {loading ? (\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={10} width=\"30%\"/>\n                            </React.Fragment>\n                        ) : (\n                            <TagView items={article.categories}/>\n\n                        )}\n\n                        {loading ? (\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={30} width=\"100%\"/>\n                            </React.Fragment>\n                        ) : (\n                            <a className={classes.title} href={article.link} target=\"_blank\">\n                                <CardActionArea\n                                    // onClick={() => window.open(article.link, '_blank')}\n                                >\n                                    {article.title.length === 0 ? (\n                                        <div className={classes.title}>\n                                            {mercuryItem.title}\n                                        </div>\n                                    ) : (\n                                        <div className={classes.title}>\n                                            {article.title}\n                                        </div>\n\n                                    )}\n                                </CardActionArea>\n                            </a>\n                        )}\n\n                        {loading ? (\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={10} width=\"10%\"/>\n                            </React.Fragment>\n                        ) : (\n                            <div className={classes.source}>\n                                {article.source}\n                            </div>\n                        )}\n\n                        {mercuryLoading || loading ? (\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={20} style={{marginBottom: 6}}/>\n                                <Skeleton animation=\"wave\" height={20} width=\"80%\"/>\n                            </React.Fragment>\n                        ) : (\n                            <div className={classes.description}>\n                                {mercuryItem.excerpt}\n                            </div>\n                        )}\n\n                        {loading ? (\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={10} width=\"30%\"/>\n                            </React.Fragment>\n                        ) : (\n                            <div className={classes.date}>\n                                Published on <b>{parseDate(article.pubDate)}</b>\n                            </div>\n                        )}\n                    </div>\n\n                </CardContent>\n            </Card>\n        );\n    }\n\n    function getData() {\n        console.log(\"send request for : \" + props.word);\n        let url = \"\";\n        if (props.source != null)\n            url = props.source.domain\n        if (props.word.length > 0) {\n            getArticlesByKeyword(props.word, url, \"1\").then(result => {\n                setArticles(result.data)\n                setLoading(false)\n            });\n        } else if (props.category.length > 0) {\n            getArticlesByCategory(props.category, url, \"1\").then(result => {\n                setArticles(result.data)\n                setLoading(false)\n            });\n        }\n    }\n\n    const onEntered = () => {\n        setArticles([])\n        setLoading(true)\n        getData()\n        console.log(\" onEntered\");\n    };\n\n    const onExited = () => {\n        setArticles([])\n        console.log(\" onExited\");\n    }\n\n    const header = () => {\n        let url = \"\";\n        if (props.source != null) {\n            url = props.source.domain\n        }\n        if (props.word.length > 0) {\n            if (url.length > 0)\n                return <div>Articles related to `<b>{props.word}</b>`\n                    <br/>\n                    Published by <b>{props.source.name}</b></div>;\n            return <div>Articles related to `<b>{props.word}</b>`</div>;\n        }\n\n        if (props.category.length > 0) {\n            if (url.length > 0)\n                return <div>Articles belong to <TagView items={[props.category]}/>\n                    <br/>\n                    Published by <b>{props.source.name}</b></div>;\n            return <div>Articles belong to <TagView items={[props.category]} header/></div>;\n        }\n\n    }\n\n    return (\n        <Dialog\n            open={props.isArticlesDialogOpened}\n            onClose={props.handleCloseArticlesDialog}\n            scroll={'paper'}\n            onEntered={onEntered}\n            onExited={onExited}\n            aria-labelledby=\"scroll-dialog-title\"\n            aria-describedby=\"scroll-dialog-description\"\n        >\n            <DialogTitle id=\"scroll-dialog-title\">\n                {header()}\n            </DialogTitle>\n            <DialogContent dividers={true}>\n                {loading ? (\n                    <div>\n                        <Media/>\n                        <Media/>\n                        <Media/>\n                    </div>\n                ) : (\n                    articles.map((article, index) =>\n                        <Media key={index} item={article}/>\n                    )\n                )}\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleCloseArticlesDialog} color=\"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n    );\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport LandingPage from \"./views/LandingPage/LandingPage\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {main: '#000000'},\n        secondary: {main: '#757575'},\n        // blue: {main: '#1a73e8'},\n    },\n    typography: {useNextVariants: true},\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/test\" component={App}/>\n                <Route path=\"/\" component={LandingPage}/>\n            </Switch>\n        </BrowserRouter>\n    </MuiThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport SourceAutocomplete from \"../../components/Autocomplete/Autocomplete\";\nimport './LandingPage.css';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {NewsDiversitySection} from \"./NewsDiversitySection\";\nimport {WordcloudSection} from \"./WordcloudSection\";\nimport {ArticlesDialog} from \"../../components/ArticlesDialog/ArticlesDialog\";\n\nexport default function LandingPage(props) {\n    const [isArticlesDialogOpened, setArticlesDialogOpened] = React.useState(false);\n    const [word, setWord] = React.useState(\"\");\n    const [category, setCategory] = React.useState(\"\");\n    const [source, setSource] = React.useState(null);\n\n    const newsDiversityChild = React.useRef();\n    const wordCloudChild = React.useRef();\n\n    const handleOpenArticlesDialog = (word) => {\n        setArticlesDialogOpened(true);\n        console.log(\"LandingPage: word\" + word)\n        setWord(word)\n        setCategory(\"\")\n    };\n\n    const handleOpenArticlesByCategoryDialog = (category) => {\n        setArticlesDialogOpened(true);\n        console.log(\"LandingPage: category\" + JSON.stringify(category))\n        setCategory(category.name)\n        setWord(\"\")\n    };\n\n    const handleCloseArticlesDialog = () => {\n        setArticlesDialogOpened(false);\n    };\n\n\n    function onChangeValueHandler(val) {\n        setSource(val)\n        if (val != null)\n            console.log(\"click: \" + val.name);\n        newsDiversityChild.current.sourceUpdated(val)\n        wordCloudChild.current.sourceUpdated(val)\n    }\n\n    return (\n        <div>\n            <Container maxWidth=\"lg\">\n                <header className=\"lp-header\">\n                    <SourceAutocomplete\n                        onChangeValue={onChangeValueHandler}\n                    />\n                </header>\n\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <WordcloudSection\n                            ref={wordCloudChild}\n                            handleOpenArticlesDialog={handleOpenArticlesDialog}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <NewsDiversitySection\n                            ref={newsDiversityChild}\n                            handleOpenArticlesByCategoryDialog={handleOpenArticlesByCategoryDialog}/>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <ArticlesDialog isArticlesDialogOpened={isArticlesDialogOpened}\n                            handleCloseArticlesDialog={handleCloseArticlesDialog}\n                            word = {word}\n                            category = {category}\n                            source={source}\n            />\n\n\n        </div>\n    );\n\n}"],"sourceRoot":""}